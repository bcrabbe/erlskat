name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        erlang: ['26', '28']

    container:
      image: erlang:${{ matrix.erlang }}-alpine

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        # Install curl and other essential tools for erlang.mk
        apk update
        apk add --no-cache \
          curl \
          git \
          build-base \
          openssl-dev \
          ncurses-dev

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
          .erlang.mk
        key: deps-${{ runner.os }}-${{ matrix.erlang }}-${{ hashFiles('Makefile') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ matrix.erlang }}-
          deps-${{ runner.os }}-

    - name: Download dependencies
      run: make deps

    - name: Compile project
      run: make app

    - name: Run tests
      run: |
        # Try multiple test targets to find what's available
        if make help | grep -q "tests"; then
          make tests
        elif make help | grep -q "test"; then
          make test
        elif make help | grep -q "eunit"; then
          make eunit
        else
          echo "No test targets found, skipping tests"
        fi

    - name: Run linting (if available)
      continue-on-error: true
      run: |
        if make help | grep -q "elvis"; then
          make elvis
        else
          echo "Elvis linter not configured, skipping"
        fi

    - name: Run static analysis (if available)
      continue-on-error: true
      run: |
        if make help | grep -q "dialyze"; then
          make dialyze
        else
          echo "Dialyzer not configured, skipping"
        fi
