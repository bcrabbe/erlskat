name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  packages: write

jobs:
  compile-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        erlang: ['28']

    container:
      image: erlang:${{ matrix.erlang }}-alpine

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        # Install curl and other essential tools for rebar3
        apk update
        apk add --no-cache \
          curl \
          git \
          build-base \
          openssl-dev \
          ncurses-dev \
          wget

    - name: Install rebar3
      run: |
        wget https://s3.amazonaws.com/rebar3/rebar3 && chmod a+x rebar3
        mv rebar3 /usr/local/bin/

    - name: Install just
      uses: extractions/setup-just@v3

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          _build
          ~/.cache/rebar3
        key: deps-${{ runner.os }}-${{ matrix.erlang }}-${{ hashFiles('rebar.config', 'rebar.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ matrix.erlang }}-
          deps-${{ runner.os }}-

    - name: Download dependencies
      run: just deps

    - name: Compile project
      run: just compile

    - name: Run tests
      run: just test

    - name: Run linting (if available)
      continue-on-error: true
      run: just lint

    - name: Run static analysis (if available)
      continue-on-error: true
      run: rebar3 dialyzer

    - name: Run release
      run: just release-prod

  build:
    runs-on: ubuntu-latest
    needs: compile-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
