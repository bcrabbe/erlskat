name: Simple CI with Docker

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch:

jobs:
  ci:
    name: Build, Lint, and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        erlang: [24, 25, 26]
      fail-fast: false
    container:
      image: erlang:${{ matrix.erlang }}-alpine

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apk add --no-cache git make gcc musl-dev

    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
          .erlang.mk
          *.plt
        key: ${{ runner.os }}-erlang-${{ matrix.erlang }}-${{ hashFiles('Makefile', 'rebar.config', 'mix.exs') }}
        restore-keys: |
          ${{ runner.os }}-erlang-${{ matrix.erlang }}-

    - name: Download dependencies
      run: make deps

    - name: Compile project
      run: make app

    - name: Run linter (Elvis)
      run: |
        if make help 2>/dev/null | grep -q elvis; then
          echo "Running Elvis linter..."
          make elvis
        else
          echo "Elvis linter not configured, skipping"
        fi

    - name: Run tests
      run: |
        echo "Running tests..."
        # Try different test targets in order of preference
        if make help 2>/dev/null | grep -q "^tests"; then
          make tests
        elif make help 2>/dev/null | grep -q eunit; then
          make eunit
          # Also try CT if available
          if make help 2>/dev/null | grep -q "ct"; then
            make ct
          fi
        else
          echo "No test targets found"
          exit 1
        fi

    - name: Run Dialyzer (Optional)
      run: |
        if make help 2>/dev/null | grep -q dialyze; then
          echo "Running Dialyzer static analysis..."
          make dialyze || echo "Dialyzer failed, but continuing..."
        else
          echo "Dialyzer not configured, skipping"
        fi
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-erlang-${{ matrix.erlang }}
        path: |
          _build/test/logs/
          logs/
          eunit.xml
          ct_logs/
        retention-days: 30
        if-no-files-found: ignore
